<?xml version='1.0'?>
<sdf version='1.4'>
    <model name='prognodrone'>
        <!-- model plugins should be put in the front of the sensor plugins! -->
        <plugin name='simple_drone' filename='libplugin_drone.so'>
            <bodyName>base_link</bodyName>
            <imuTopic>/dji_sdk/imu</imuTopic>
            <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
            <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
            <rollpitchLimit>0.43</rollpitchLimit> <!--        M600Pro-->
            <yawProportionalGain>2.0</yawProportionalGain>
            <yawDifferentialGain>1.0</yawDifferentialGain>
            <yawLimit>2.6</yawLimit> <!--        M600Pro-->
            <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
            <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>

            <velocityXYLimit>18</velocityXYLimit> <!--        M600Pro-->
            <velocityZProportionalGain>5.0</velocityZProportionalGain>
            <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
            <velocityZLimit>5</velocityZLimit> <!--        M600Pro-->
            <positionXYProportionalGain>1.1</positionXYProportionalGain>
            <positionXYDifferentialGain>0.0</positionXYDifferentialGain>
            <positionXYIntegralGain>0.0</positionXYIntegralGain>
            <positionXYLimit>5</positionXYLimit>
            <positionZProportionalGain>1.0</positionZProportionalGain>
            <positionZDifferentialGain>0.2</positionZDifferentialGain>
            <positionZLimit>-1</positionZLimit>
            <maxForce>60</maxForce>
            <motionSmallNoise>0.05</motionSmallNoise>
            <motionDriftNoise>0.03</motionDriftNoise>
            <motionDriftNoiseTime>5.0</motionDriftNoiseTime>
        </plugin>
        <plugin name="gps_sim"  filename="libhector_gazebo_ros_gps.so" >
            <updateRate>4.0</updateRate>
            <bodyName>base_link</bodyName>
            <frameId>base_link</frameId>
            <topicName>/dji_sdk/gps_position</topicName>
            <velocityTopicName>/dji_sdk/velocity</velocityTopicName>
            <referenceLatitude>49.0128444</referenceLatitude>
            <referenceLongitude>8.407089</referenceLongitude>
            <drift>5.0 5.0 5.0</drift>
            <gaussianNoise>0.01 0.01 0.01</gaussianNoise>
            <velocityDrift>0 0 0</velocityDrift>
            <velocityGaussianNoise>0.05 0.05 0.05</velocityGaussianNoise>
        </plugin>


        <!-- pose of the quadrotor in the world frame -->
        <pose>0 0 0.00 0 0 0</pose>
        <link name='base_link'>
            <inertial>
                <mass>1.477</mass>
                <pose>0 0 0 0 0 0</pose>
                <inertia>         <!-- rotational inertia -->
                    <ixx>0.1152</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.1152</iyy>
                    <iyz>0</iyz>
                    <izz>0.218</izz>
                </inertia>
            </inertial>

            <visual name='visual'>
                <geometry>
                    <mesh><uri>model://prognodrone/m600.dae</uri></mesh>

                </geometry>
            </visual>

            <visual name='front_camera'>
                <pose> 0.2 0.0 0.6 0 0 0 </pose>
                <geometry>
                    <box>
                        <size>0.05 0.1 0.1</size>
                    </box>
                </geometry>
            </visual>

            <visual name='bottom_camera'>
                <pose> 0.0 0.0 0.4 0 0.5 0 </pose>
                <geometry>
                    <box>
                        <size>0.05 0.1 0.1</size>
                    </box>
                </geometry>
            </visual>

            <collision name='collision'>
                <geometry>
                    <mesh><uri>model://prognodrone/m600.dae</uri></mesh>
                </geometry>
            </collision>

            <gravity>1</gravity>

            <!-- IMU sensor in 100fps -->
            <sensor name='sensor_imu' type='imu'>
                <always_on> 1 </always_on>
                <update_rate> 100 </update_rate>
                <pose> 0 0 0 0 0 0 </pose>
                <plugin name='ros_imu' filename='libplugin_ros_imu.so'>
                </plugin>
                <imu>
                    <noise>
                        <type>gaussian</type>
                        <rate>
                            <mean> 0 </mean>
                            <stddev> 0 </stddev>
                        </rate>
                        <accel>
                            <mean> 0 </mean>
                            <stddev> 0.00 </stddev>
                        </accel>
                    </noise>
                </imu>
            </sensor>


            <!-- Front Depth and Color Cam -->
            <sensor name="camera" type="depth">
                <update_rate>20</update_rate>
                <camera>
                    <horizontal_fov>1.047198</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.05</near>
                        <far>5000</far>
                    </clip>
                </camera>
                <pose> 0.2 0.0 0.6 0 0 0 </pose>
                <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
                    <baseline>0.2</baseline>
                    <alwaysOn>true</alwaysOn>
                    <!--          Keep this zero, update_rate in the parent <sensor> tag
                                will control the frame rate. -->
                    <updateRate>0.0</updateRate>
                    <cameraName>front_camera</cameraName>
                    <imageTopicName>/drone/front_camera/color/image_raw</imageTopicName>
                    <depthImageTopicName>/drone/front_camera/depth/image_raw</depthImageTopicName>
                    <pointCloudTopicName>/drone/front_camera/depth/points</pointCloudTopicName>
                    <frameName>drone</frameName>
                    <pointCloudCutoff>0.5</pointCloudCutoff>
                    <pointCloudCutoffMax>100</pointCloudCutoffMax>
                    <distortionK1>0</distortionK1>
                    <distortionK2>0</distortionK2>
                    <distortionK3>0</distortionK3>
                    <distortionT1>0</distortionT1>
                    <distortionT2>0</distortionT2>
                    <CxPrime>0</CxPrime>
                    <Cx>0</Cx>
                    <Cy>0</Cy>
                    <focalLength>0</focalLength>
                    <hackBaseline>0</hackBaseline>
                </plugin>
            </sensor>

            <!-- Bottom Depth and Color Cam -->

            <sensor name="camera" type="depth">
                <update_rate>15</update_rate>
                <camera>
                    <horizontal_fov>2.047198</horizontal_fov>
                    <image>
                        <width>640</width>
                        <height>480</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.05</near>
                        <far>5000</far>
                    </clip>
                </camera>
                <pose> 0.0 0.0 0.4 0 0.5 0 </pose>
                <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
                    <baseline>0.2</baseline>
                    <alwaysOn>true</alwaysOn>
                    <!--          Keep this zero, update_rate in the parent <sensor> tag
                                will control the frame rate. -->
                    <updateRate>0.0</updateRate>
                    <cameraName>bottom_camera</cameraName>
                    <imageTopicName>/drone/bottom_camera/color/image_raw</imageTopicName>
                    <depthImageTopicName>/drone/bottom_camera/depth/image_raw</depthImageTopicName>
                    <pointCloudTopicName>/drone/bottom_camera/depth/points</pointCloudTopicName>
                    <frameName>drone</frameName>
                    <pointCloudCutoff>0.5</pointCloudCutoff>
                    <pointCloudCutoffMax>100</pointCloudCutoffMax>
                    <distortionK1>0</distortionK1>
                    <distortionK2>0</distortionK2>
                    <distortionK3>0</distortionK3>
                    <distortionT1>0</distortionT1>
                    <distortionT2>0</distortionT2>
                    <CxPrime>0</CxPrime>
                    <Cx>0</Cx>
                    <Cy>0</Cy>
                    <focalLength>0</focalLength>
                    <hackBaseline>0</hackBaseline>
                </plugin>
            </sensor>

        </link>
    </model>
</sdf>
